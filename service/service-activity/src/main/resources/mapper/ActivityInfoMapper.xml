<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper SYSTEM "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.atkexin.ssyx.activity.mapper.ActivityInfoMapper">

    <resultMap id="ActivityRuleMap" type="com.atkexin.ssyx.model.activity.ActivityRule" autoMapping="true"></resultMap>
    <resultMap id="CouponInfoMap" type="com.atkexin.ssyx.model.activity.CouponInfo" autoMapping="true"></resultMap>
    <select id="selectCouponInfoList" resultMap="CouponInfoMap">
        select
            info.id,info.coupon_type,info.coupon_name,info.amount,info.condition_amount,info.start_time,info.end_time,info.range_type,info.range_desc,info.publish_count,info.per_limit,info.use_count,info.receive_count,info.expire_time,info.publish_status,info.create_time,info.update_time,info.is_deleted
             ,cuse.coupon_status
        from coupon_info info
                 left join coupon_range crange on crange.coupon_id = info.id
                 left join coupon_use cuse on cuse.coupon_id = info.id and cuse.user_id = #{userId}
        where
            (
                info.range_type = 1
                    or (crange.range_type = 2 and crange.range_id = #{skuId})
                    or (crange.range_type = 3 and crange.range_id = #{categoryId})
                )
          and now() between info.start_time and info.end_time
        order by info.amount desc
    </select>

    <select id="selectExistSkuIdList" resultType="Long">
        select
        sku.sku_id
        from activity_info info
        inner join activity_sku sku on sku.activity_id = info.id
        <where>
            <if test="skuIdList != null">
                and sku.sku_id in
                <foreach collection="skuIdList" item="item" index="index" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            and now() between info.start_time and info.end_time
        </where>
    </select>

    <select id="selectActivityRuleList" resultMap="ActivityRuleMap">
        select
            info.activity_type as activityType,
            rule.id,rule.activity_id,rule.condition_amount,rule.condition_num,rule.benefit_amount,rule.benefit_discount
        from activity_info info
                 inner join activity_sku sku on sku.activity_id = info.id
                 inner join activity_rule rule on rule.activity_id = info.id
        where
            sku.sku_id = #{skuId}
          and now() between info.start_time and info.end_time
        order by rule.condition_amount desc, rule.condition_num desc
    </select>

</mapper>